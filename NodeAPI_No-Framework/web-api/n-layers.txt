N-layers

database - 
    - a file that stores all application data
src - all source code
    - entities - object mappings
    - factories - instance generators
    - repositories - data access (data layer)
    - routes - endpoint mappings (application server)
    - services - communication between the routes and repositories layer
    - utilities - shared code 
    - handler - communication between routes and server (application server)
    - index.js - server instance (no need if it is just api server & has no presentation layer)

tests - all automated test suites
    - integration tests - testing on the user point of view. it is also and E2E test because
    there's no app consuming it (np presentation layer)

    - unit tests - all tests that must run wihtout any external connections such as 
    databases, external APIs and on our case, the fileSystem


notes:

presentation layer <=> view <=> presentation tier <=> web server
application layer / business logic  <=> controller <=> application tier <=> application server
data layer <=> model <=> data tier <=> database server


https://stackoverflow.com/questions/698220/mvc-vs-n-tier-architecture#:~:text=MVC%20abstracts%20away%20the%20details,using%20an%20N%2Dtier%20architecture.&text=All%20of%20the%20formats%20discussed%20are%20examples%20of%203%20layer%20designs.
https://www.ibm.com/topics/three-tier-architecture#:~:text=Three%2Dtier%20architecture%20is%20a,associated%20with%20the%20application%20is


A 'layer' refers to a functional division of the software
A 'tier' refers to a functional division of the software that runs on infrastructure separate from the other divisions.


MVC is a programming design pattern which is often implemented using an N-tier / layers architecture.